import { SvelteComponentTyped } from "svelte";
import { Button } from '..';
declare const __propDef: {
    props: {
        currentDate?: Date;
        open?: boolean;
        locale?: string;
        firstDayOfWeek?: number;
        showToday?: boolean;
        showClose?: boolean;
        dateFormat?: Intl.DateTimeFormatOptions;
        dayLabelFormat?: "short" | "narrow" | "long";
        customClass?: string;
        primaryColor?: Button["color"];
        secondaryColor?: string;
        setDate?: (date: Date) => void;
        nextMonth?: () => void;
        previousMonth?: () => void;
        setMonth?: (month: number) => void;
        setYear?: (year: number) => void;
    };
    events: {
        selectDay: CustomEvent<any>;
        close: CustomEvent<any>;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export type DateCalenderProps = typeof __propDef.props;
export type DateCalenderEvents = typeof __propDef.events;
export type DateCalenderSlots = typeof __propDef.slots;
/**
 * [Go to docs](https://flowbite-svelte.com/)
 * ## Props
 * @prop export let currentDate: Date = new Date();
 * @prop export let open = false;
 * @prop export let locale: string = 'default';
 * @prop export let firstDayOfWeek: number = 0;
 * @prop export let showToday: boolean = true;
 * @prop export let showClose: boolean = true;
 * @prop export let dateFormat: Intl.DateTimeFormatOptions = { month: 'long', year: 'numeric' };
 * @prop export let dayLabelFormat: 'short' | 'narrow' | 'long' = 'short';
 * @prop export let customClass: string = '';
 * @prop export let primaryColor: Button['color'] = 'blue';
 * @prop export let secondaryColor: string = 'gray';
 */
export default class DateCalender extends SvelteComponentTyped<DateCalenderProps, DateCalenderEvents, DateCalenderSlots> {
    get setDate(): (date: Date) => void;
    get nextMonth(): () => void;
    get previousMonth(): () => void;
    get setMonth(): (month: number) => void;
    get setYear(): (year: number) => void;
}
export {};
